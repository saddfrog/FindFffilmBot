from functions_for_bot import *

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.from_user.id, 
                     "–ü—Ä–∏–≤–µ—Ç)\n–ë–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ —Ñ–∏–ª—å–º–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", reply_markup=main_b())
@bot.message_handler(commands=['help'])
def start_message(message):
    bot.send_message(message.from_user.id, "–ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")

@bot.message_handler(content_types=['sticker'])
def start_message(message):
        bot.send_message(message.from_user.id, "–ó–∞–±–∞–≤–Ω—ã–π —Å—Ç–∏–∫–µ—Ä üòÅ")
@bot.message_handler()
def start_message(message):
        bot.send_message(message.from_user.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ —É–º–µ—é —á–∏—Ç–∞—Ç—å, –Ω–æ —è —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ç–∞–º —á—Ç–æ-—Ç–æ —Ö–æ—Ä–æ—à–µ–µüòú")

@bot.callback_query_handler(func=lambda call: True)    
def call_back(call):
    del_prev_buttons(call)
    if "_page_" in call.data:
            parts = call.data.split("_page_")
            type_selection = parts[0]
            page = int(parts[1])
            bot.edit_message_reply_markup(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=selection_b(type_selection, page)
            )
            return
    if call.data == 'main':
        # del_prev_buttons(call)
        bot.send_message(chat_id=call.message.chat.id, text="—Ç–µ—Å—Ç–∏–º –∫–Ω–æ–ø–∫–∏\n"
       "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–º —Å–ø–æ—Å–æ–±–æ–º –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º", reply_markup=main_b())      
    if call.data == 'selection_menu':
        # del_prev_buttons(call)
        bot.send_message(chat_id=call.message.chat.id, text="–í–æ—Ç —Ç–µ–∫—É—â–∏–µ –ø–æ–¥–±–æ—Ä–∫–∏:",reply_markup=selection_menu_b())
    if call.data in ['sel_genre', 'sel_actor', 'sel_year', 'sel_all_actor', 'sel_all_films']:
        setting = call.data 
        bot.send_message(chat_id=call.message.chat.id, text="–í—ã–±–æ—Ä –ø–æ–¥–±–æ—Ä–∫–∏ —Ñ–∏–ª—å–º–∞",reply_markup=selection_b(setting))
    if call.data in callback_map:
        real_value = callback_map[call.data]
        bot.send_message(call.message.chat.id, f"–¢—ã –≤—ã–±—Ä–∞–ª: {real_value}")

    if call.data == 'random_film':   
        film = random_film() 
        # del_prev_buttons(call)
        bot.send_photo(chat_id=call.message.chat.id,photo=film[6] ,caption=f"üé¨*–í–∞—à —Ñ–∏–ª—å–º*: `{film[1]}`\n\n*–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞*: {film[7]}\n\n *–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —Ä–µ–π—Ç–∏–Ω–≥*: {film[15]}",parse_mode="MARKDOWN", reply_markup=random_film_b())
    if call.data == 'user_choose':   
        # del_prev_buttons(call)
        bot.send_message(chat_id=call.message.chat.id, text=f"ü´£–ü–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", reply_markup=user_choose_b())

bot.polling(none_stop=True, interval=0)